<!--订单列表模块-->
<template>
<view class="order_item">
<repeat for="{{orderList}}">
  <view class="list" wx:key="index">
    <view class="item_content" >
      <navigator class="order_list_top" url="/pages/order_detail?orderNo={{item.no}}">
        <view class="left">
          <view class="title">订单号：
            <text class="order_doc">{{item.no}}</text>
          </view>
          <view class="title mt10">提交时间：
            <text class="order_doc">{{item.created_at}}</text>
          </view>
        </view>
        <text class="defult" wx:if="{{item.paid_at== ''}}">
          <view class="order_state">待支付</view>
        </text>
        <view class="order_state" wx:if="{{item.status == 'cancel'}}">已取消</view>
        <view class="order_state" wx:if="{{item.paid_at == '' && item.status != 'cancel' }}">待付款</view>
        <view class="order_state" wx:if="{{item.paid_at != '' && item.ship_status == 'pending' && item.refund_status == 'pending'}}">已付款</view>
        <view class="order_state" wx:if="{{item.ship_status == 'delivered'}}">待收货</view>
        <view class="order_state" wx:if="{{item.ship_status == 'received'}}">已完成</view>
        <view class="order_state" wx:if="{{item.paid_at != '' && item.refund_status == 'applied' && item.ship_status == 'pending'}}">申请退款</view>
    </navigator>

    <view class="order_list_center">
      <shopItemList :list.sync="item.items" :order.sync="item"></shopItemList>
    </view>
  </view>
  <view class="order_list_footer">
    <view class="reveiveMoney c333">应付款：
      <text class="num">{{item.total_amount}}</text>
    </view>
    <view class="btn_group"  wx:if="{{item.status != 'cancel'}}">
      <view class="btn btn_del" @tap="cancel" data-id="{{item.no}}" wx:if="{{item.paid_at == ''}}">取消订单</view>
      <view class="btn btn_pay" @tap="payMoney" data-id="{{item.no}}" data-fee="{{item.total_amount}}" wx:if="{{item.paid_at == ''}}">继续付款</view>
      <view class="btn btn_del" @tap="applyRefund" data-item="{{item}}" wx:if="{{item.paid_at != '' && item.ship_status == 'pending'  && item.refund_status == 'pending'}}">申请退款</view>
      <view class="btn btn_pay" @tap="received" data-id="{{item.no}}" wx:if="{{item.ship_status == 'delivered'}}">确认收货</view>
    </view>
  </view>

  </view>
</repeat>


</view>
</template>
<script>
import wepy from 'wepy'
import tip from '@/utils/tip'
import ShopItemList from '@/components/shop_item_list'
import api from '@/api/api'
import helper from '@/utils/helper';

import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO
} from '@/utils/constant';
import regeneratorRuntime from '@/utils/runtime.js'
export default class orderItem extends wepy.component {

  props = {
    orderList: {
      default: [],
      flag:"",
      orderNo:"",
      //动画效果
      list:[]
    }
  }

  async orderReceived(orderNo){
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openid = userSpecialInfo.openid;
    const json = await api.orders({
      uri: "/" + orderNo+"/received",
      method: "POST",
      query: {
        openid: openid,
      }
    });
    if (json.statusCode == 201) {
      let tempOrderList = []
      for (let i = 0; i < this.orderList.length; i++) {
        if (this.orderList[i].no != orderNo)  {
          tempOrderList.push(this.orderList[i])
        }
      }
      this.orderList = tempOrderList;
    } else {
      tip.error(json.data.message)
    }
    that.$apply();
  }

  async orderCancel(orderNo){
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openid = userSpecialInfo.openid;
    const json = await api.orders({
      uri: "/" + orderNo+"/cancel",
      method: "POST",
      query: {
        openid: openid,
      }
    });
    if (json.statusCode == 201) {
      for (let i = 0; i < this.orderList.length; i++) {
        if (this.orderList[i].no == orderNo)  {
          this.orderList[i].status = "cancel";
        }
      }
    } else {
      tip.error(json.data.message)
    }
    that.$apply();
  }


  components = {
    shopItemList: ShopItemList
  }

  events = {

  }

  methods = {
    async received(e) {
      this.orderNo = e.currentTarget.dataset.id;
      await tip.confirm('是否确认收货');
      this.orderReceived(this.orderNo);
    },
    async cancel(e) {
      this.orderNo = e.currentTarget.dataset.id;
      await tip.confirm('是否确认取消');
      this.orderCancel(this.orderNo);
    },

    async applyRefund(e) {
      let item = e.currentTarget.dataset.item;
      wepy.navigateTo({
        url:"/pages/apply_refund?order="+JSON.stringify(item)
      })

    },

    async payMoney(e) {
      this.orderNo = e.currentTarget.dataset.id;
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      helper.payOrder(userSpecialInfo.openid, this.orderNo, e.currentTarget.dataset.fee);
    }
  }

  onLoad() {
  }
}

</script>
<style lang="less">

.over_model {
  position: fixed;
  overflow: hidden;
  background: rgba(0, 0, 0, 0.5);
  z-index: 999;
  width: 100%;
  height: 100%;
  top: 0;
}

.head_box {
  display: flex;
  align-items: center;
  border-bottom: 1px solid #efefef;
  padding-bottom: 26rpx;
}

.order_item {
  padding: 10rpx 0rpx;
  background: #f7f7f7;
  margin-bottom: 30rpx;
  .title {
    font-size: 26rpx;
    color: #333;
  }
  .order_doc {
    font-size: 26rpx;
    color: #808080;
  }
  .mt10 {
    margin-top: 10rpx;
  }
  .order_state {
    color: #ff4856;
    font-size: 32rpx;
  }
  .order_list_top {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
  }
  .order_list_footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 20rpx;
    .num {
      color: #ff4856;
    }
  }
  .order_list_top {
    padding-bottom: 26rpx;
    border-bottom: 1px solid #efefef
  }
  .list {
    background: #fff;
    padding: 30rpx;
    margin-top: 15rpx;
  }
  .btn_group {
    display: flex;
    align-items: center;
    .btn {
      font-size: 30rpx;
      padding: 22rpx 35rpx;
      text-align: center;
      margin: 0 auto;
      width: 100%;
      -moz-border-radius: 15rpx;
      /* Firefox */
      -webkit-border-radius: 15rpx;
      /* Safari 和 Chrome */
      border-radius: 15rpx;
      /* Opera 10.5+, 以及使用了IE-CSS3的IE浏览器 */
    }
    .btn_del {
      color: #333;
      border: 1px solid #ccc;
    }
    .btn_pay {
      background: #ff4856;
      color: #fff;
      margin-left: 20rpx;
    }
  }
}

</style>
