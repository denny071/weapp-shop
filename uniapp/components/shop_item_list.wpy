
<template>
<repeat for="{{list}}" key="index" index="index" item="item">
  <view class="good_list" >
    <navigator class="image_box" url="/pages/goods_detail?id={{item.product.id}}">
      <image src="{{item.product.image}}"></image>
    </navigator>
    <view class="goods" >
      <view class="product_name">{{item.product.title}}</view>
      <view class="product_rule">{{item.product_sku.title}} 数量：{{item.amount}} </view>
      <view class="product_info"><view class="price">￥{{item.product_sku.price}}</view></view>
    </view>
    <view class="product_btn_group">
      <view class="product_btn product_btn_review" @tap="review" data-item="{{item}}"  wx:if="{{order.ship_status == 'received' && item.rating == null}}">评价</view>
    </view>
  </view>
</repeat>
</template>
<script>
import wepy from 'wepy'
import tip from '@/utils/tip';
import api from '@/api/api';
import {
  USER_SPECICAL_INFO
} from '@/utils/constant';
import regeneratorRuntime from '@/utils/runtime.js'
export default class ShopItemList extends wepy.component {
  props = {
    goodsList: {
      default: []
    },
    list:[],
    order:{}
  }

  events = {
  }

  async applyRefund(itemId) {
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;

    const json = await api.refundApply({
      query:{
        openId: openId,
        orderItemId: itemId
      }
    });
    if (json.data.code==0) {
      wx.showModal({
        title: '提示',
        content: '你的退货申请已提交,等待审批!',
        showCancel: false,
        success: function(res) {
          if (res.confirm) {
          } else if (res.cancel) {
          }
        }
      })
    } else {
      tip.error(json.data.msg);
    }
  }

  methods = {
    refreshList(val){
      if (val==undefined) return;
      this.list = val;
      this.$apply();
    },
    review(e){
      let item = e.currentTarget.dataset.item;
      wepy.navigateTo({
        url:"/pages/comment_add?item="+JSON.stringify(item)
      })
    },
    refund(e) {
      let itemId = e.currentTarget.dataset.id;
      let that = this;
      wx.showModal({
        title: '提示',
        content: '确定要退货吗?',
        success: function(res) {
          if (res.confirm) {
            that.applyRefund(itemId);
          } else if (res.cancel) {
          }
        }
      })
    }
  }

  onLoad() {
    this.list=[];
  }
}

</script>
<style lang="less">
.good_list {
  display: flex;
  justify-content:space-between;
  padding: 20rpx 0rpx;
  border-bottom: 1px solid #efefef;
  .goods{
    width: 300rpx;
  }
}

.image_box {
  image {
    width: 180rpx;
    height: 180rpx;
  }
}


.product_name {
  color: #414141;
  font-size: 32rpx;
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  word-break: break-all;
}

.product_rule {
  font-size: 26rpx;
  color: #757575;
  padding-top: 16rpx;
}

.price {
  color: #de0000;
  font-size: 34rpx;
  font-weight: 600;
}


.product_btn_group {
  display: flex;
  align-items: center;
  .product_btn {
    font-size: 30rpx;
    padding: 10rpx 25rpx;
    text-align: center;
    margin: 0 auto;
    width: 100rpx;
    -moz-border-radius: 15rpx;
    /* Firefox */
    -webkit-border-radius: 15rpx;
    /* Safari 和 Chrome */
    border-radius: 15rpx;
    /* Opera 10.5+, 以及使用了IE-CSS3的IE浏览器 */
  }

  .product_btn_review {
    color: #333;
    border: 1px solid #ccc;
  }
}
.product_info {
  padding-top: 20rpx;
  display: flex;
  align-items: flex-end;
  justify-content: space-between;
}

.cost_price {
  padding-left: 20rpx;
}

</style>
