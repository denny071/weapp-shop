<template>
  <view wx:if="{{show}}">
    <view  class="filter-slider" >
      <scroll-view scroll-y="true" style="height:{{winHeight - 50}}px">
      <view class="block"  wx:for="{{properties}}" wx:key="item">
        <view class="title">{{item.key}}</view>
        <view class="item_box">
          <view wx:for-items="{{item.dataList}}"
                wx:for-item="data"
                data-key="{{data.key}}"
                wx:key="data"
                class="item {{data.selected ?'active':''}}"
                bindtap="select">{{data.val}}</view>
        </view>
      </view>
      <view class="btn_group">
        <view class="btn_left_box">
          <view class="button type_empity" @tap="resetFilter">重置</view>
        </view>
        <view class="btn_right_box">
          <view class="button type_yellow" @tap="searchFilter">确认</view>
        </view>
      </view>
      </scroll-view>
    </view>
    <view class="modal-overlay modal-overlay-visible" @tap="close()"></view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import {
    SYSTEM_INFO
  } from '@/utils/constant';
  import regeneratorRuntime from '@/utils/runtime.js'
  export default class FilterSlider extends wepy.component {
    data = {
      show: false,
      winHeight:0,
      a: 0,
    }
    props = {
      properties: []
    }
    events = {}

    methods = {
      select(e){
        let key = e.currentTarget.dataset.key
        this.$emit('selectItem', key)
      },
      close() {
        this.show = false;
      },
      searchFilter(){
        this.$emit('searchFilter')
        this.swictchOverlay()
      },
      resetFilter(){
        this.$emit('resetFilter')
        this.swictchOverlay()
      }
    }
    swictchOverlay() {
      this.show = !this.show;
      this.$apply();
    }
    ready(){

    }
    onLoad() {

      //设置滚动高度
      let systemInfo = wepy.getStorageSync(SYSTEM_INFO);
      this.winHeight = systemInfo.windowHeight;
      this.$apply();
    }
  }
</script>

<style lang="less">
  .filter-slider {
    position: fixed;
    top: 0;
    right: 0;
    height: 100%;
    width: 600rpx;
    z-index: 106003;
    background: #ffffff;
  }
  .block {
    font-weight: 600;
    color: #000;
    margin-top: 30rpx;
    padding-left: 30rpx;
  }
  .item_box {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    margin-left: -30rpx;
    margin-top: 30rpx;
    padding-bottom: 30rpx;
    border-bottom: 1px solid #efefef;
    .item {
      position: relative;
      margin-left: 30rpx;
      margin-top: 20rpx;
      text-align: center;
      border: 1px solid #c6c6c6;
      border-radius: 5rpx;
      width: 205rpx;
      padding: 16rpx 0rpx;
      font-size: 24rpx;
      color: #2c2c2c;
    }
    .active {
      border: 1px solid #f23737;
      color: #f23737;
    }
    .icon-bottom-check {
      position: absolute;
      bottom: -4rpx;
      right: 0;
      color: #f23737;
      font-size: 24rpx;
    }
  }
  .btn_group {
    background-color: #fff;
    display: flex;
    align-items: center;
    position: fixed;
    bottom: 10rpx;
    width: 100%; // padding:0rpx 20rpx;
    // border-top: 1px solid #efefef;
    .button {
      height: 85rpx;
      line-height: 85rpx;
      text-align: center;
      margin: 0 auto;
      width: 100%;
      -moz-border-radius: 5rpx;
      -webkit-border-radius: 5rpx;
      border-radius: 5rpx;
    }
    .btn_left_box {
      width: 280rpx;
      padding: 0rpx 10rpx;
    }
    .btn_right_box {
      width: 280rpx;
      padding: 0rpx 10rpx;
    }
  }
  /*遮罩层*/
  .modal-overlay.modal-overlay-visible {
    opacity: .4;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: #000;
    z-index: 10600;
    transition-duration: 400ms;
  }
</style>
