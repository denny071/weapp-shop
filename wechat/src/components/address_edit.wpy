<style lang="less">
.block {
  background: #fff;
}

.list_item {
  display: flex;
  align-items: center;
  border-top: 1px solid #efefef;
  padding: 35rpx 20rpx;
  .title {
    margin-right: 20rpx;
  }
  .input {
    flex: 1;
    input {
      color: #333;
    }
  }
}

.btn_box {
  margin-top: 64rpx;
  padding: 0 24rpx;
}

</style>
<template>
  <form bindsubmit="formSubmit">
    <view class="block">
      <view class="list_item">
        <view class="title">收货人姓名:</view>
        <view class="input">
          <input type="text" name="contact_name" value="{{editInfo.contact_name}}" />
        </view>
      </view>
      <view class="list_item">
        <view class="title">联系电话:</view>
        <view class="input">
          <input type="text" name="contact_phone" value="{{editInfo.contact_phone}}"/>
        </view>
      </view>
      <view class="list_item">
        <view class="title">所在地区:</view>
        <view class="input">
          <view @tap="openAddressPicker">{{province ? province.name : '省'}} - {{city ? city.name : '市' }} - {{area ? area.name : '区' }}</view>
          <areaPicker @areaArray.user="areaPickerArray"></areaPicker>
        </view>
      </view>
      <view class="list_item">
        <view class="title">详细地址:</view>
        <view class="input">
          <input type="text" name="address" value="{{editInfo.address}}" />
        </view>
      </view>
      <view class="list_item">
        <view class="title">设置默认地址:</view>
        <view class="input tr" @tap="changeCheckBoxState">
          <icon type="success" size="20" color="{{isDefult? 'red':'#999'}}" />
        </view>
      </view>
    </view>
    <view class="btn_box">
      <button class="button type_red" formType="submit">修改</button>
    </view>
  </form>
</template>
<script>
import wepy from 'wepy'
import tip from '@/utils/tip'
import api from "@/api/api"
import regeneratorRuntime from '@/utils/runtime.js'

import {
  USER_SPECICAL_INFO
} from '@/utils/constant';
import AreaPicker from "./common/wepy-area-picker"
export default class AddressEdit extends wepy.component {

  data = {
    isDefult: false,
    isCheck: false,
    editInfo: {
      default: {},
      type: Object
    },
    id: '',
    province: '',
    city: '',
    area: '',
    provinceCode: '',
    cityCode: '',
    areaCode: ''
  }

  components = {
    areaPicker: AreaPicker
  }
  async editAddress(address) {
    console.log("保存");
    console.log(address);
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let isDefult = 0;
    if (this.isDefult) {
      isDefult = 1;
    }
    let openid = userSpecialInfo.openid;
    console.log("address:");
    console.log(this.id);
    const json = await api.userAddress({
      method: 'PUT',
      uri: "/"+this.id,
      query: {
        openid: openid,
        address: address.address,
        contact_name: address.contact_name,
        contact_phone: address.contact_phone,
        is_default: isDefult,
        province:that.province.name,
        city:that.city.name,
        district:that.area.name,
        province_code:that.province.code,
        city_code:that.city.code,
        district_code:that.area.code
      }
    });
    if (json.statusCode == 200) {
      //0 列表 1新增 2编辑 (显示列表)
      this.$emit('currentPage', 0);
      this.$emit('refreshAddList', '');
    } else {
      tip.error(json.data.msg)
    }
    that.showLoading = false;
  }
  methods = {
    changeCheckBoxState() {
      this.isCheck = !this.isCheck;
      this.isDefult = !this.isDefult;
    },
    formSubmit(e) {

      let contact_name = e.detail.value.contact_name;
      let contact_phone = e.detail.value.contact_phone;
      let address = e.detail.value.address;

      if (contact_name == "") {
        tip.alert("输入收件人姓名");
        return false;
      }
      if (contact_phone == "") {
        tip.alert("输入联系电话");
        return false;

      }
      if (address == "") {
        tip.alert("输入详细地址");
        return false;
      }
      this.editAddress(e.detail.value);
      console.log('form发生了submit事件，携带数据为：', e.detail.value)
    },
    refresh(val) {
      if (val == undefined) return;
      this.editInfo = val;
      this.id = this.editInfo.id;
      if(this.editInfo.is_default==1){
        this.isDefult=true
      }
      this.province = { code: this.editInfo.province_code, name: this.editInfo.province };
      this.city = { code: this.editInfo.city_code, name:this.editInfo.city };
      this.area = { code: this.editInfo.district_code, name: this.editInfo.district };

      this.$apply();
    },
    openAddressPicker() {
      this.$invoke('areaPicker', 'openAddressPicker');
    },
    areaPickerArray(province, city, area) {
      this.province = province;
      this.city = city;
      this.area = area;

      this.provinceCode = province.code;
      this.cityCode = city.code;
      this.areaCode = area.code;
      this.$apply();
    }
  }

  onShow() {


    this.province = { code: '120000', name: '天津市' };
    this.city = { code: '120100', name: '天津市' };
    this.area = { code: '120101', name: '和平区' };
    this.$invoke('areaPicker', 'setAddressPickerValue', this.province, this.city, this.area);


  }
}

</script>
